1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

SELECT `degrees`.`name` AS `degree_name`, `students`.*
FROM `students`
JOIN `degrees` ON `degrees`.`id` = `students`.`degree_id`
WHERE `degrees`.`name` = 'Corso di Laurea in Economia';

2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze

SELECT `departments`.`name`AS `department_name`, `degrees`.*
FROM `degrees`
JOIN `departments` ON `departments`.`id` = `degrees`.`department_id`
WHERE `degrees`.`level` = "magistrale" 
AND `departments`.`name` = "Dipartimento di Neuroscienze";

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

SELECT CONCAT(`teachers`.`name`,' ', `teachers`.`surname`) AS `teacher_full_name`, `courses`.*
FROM `courses`
JOIN `course_teacher` ON `course_teacher`.`course_id` = `courses`.`id`
JOIN `teachers` ON `teachers`.`id` = `course_teacher`.`teacher_id`
WHERE `teachers`.`name` = "Fulvio"
AND `teachers`.`surname` = "Amato";

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e nome

SELECT '' AS `students_table`,`students`.* , '' AS `degrees_table`, `degrees`.*, '' AS `departments_table`, `departments`.* 
FROM `students`
JOIN `degrees` ON `students`.`degree_id` = `degrees`.`id`
JOIN `departments` ON `departments`.`id` = `degrees`.`department_id`
ORDER BY `students`.`surname` ASC, `students`.`name` ASC;

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

SELECT '' AS `degrees_table`, `degrees`.*, '' AS `courses_table`, `courses`.*, '' AS `teachers_table`, `teachers`.*
FROM `degrees`
JOIN `courses` ON `courses`.`degree_id` = `degrees`.`id`
JOIN `course_teacher` ON `course_teacher`.`course_id` = `courses`.`id`
JOIN `teachers` ON `teachers`.`id`=`course_teacher`.`teacher_id`
ORDER BY `degrees`.`id`, `courses`.`id`;

6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)

SELECT DISTINCT `departments`.`name` AS `department_name`, `teachers`.*
FROM `teachers`
JOIN `course_teacher` ON `course_teacher`.`teacher_id` = `teachers`.`id`
JOIN `courses` ON `courses`.`id` = `course_teacher`.`course_id`
JOIN `degrees` ON `degrees`.`id` = `courses`.`degree_id`
JOIN `departments` ON `departments`.`id` = `degrees`.`department_id`
WHERE `departments`.`name` = "Dipartimento di Matematica";

7. BONUS: Selezionare per ogni studente quanti tentativi dâ€™esame ha sostenuto per superare ciascuno dei suoi esami

SELECT `students`.`id` AS `student_id`, `students`.`registration_number`, `courses`.`id` AS `course_id`, 
	COUNT(`exams`.`course_id`) AS `exam_attempts`,
  (CASE WHEN  COUNT(`exams`.`course_id`) = SUM(CASE WHEN `exam_student`.`vote` < 18 THEN 1 ELSE 0 END) THEN 'not passed' ELSE 'passed' END) AS `exam_status`
FROM `students`
JOIN `exam_student` ON `exam_student`.`student_id` = `students`.`id`
JOIN `exams` ON `exams`.`id` = `exam_student`.`exam_id`
JOIN `courses` ON `courses`.`id` = `exams`.`course_id`
GROUP BY `students`.`id`, `courses`.`id`;

(versione senza le righe degli esami non superati anche dopo diversi tentativi)
SELECT `students`.`id` AS `student_id`, `students`.`registration_number`, `courses`.`id` AS `course_id`, COUNT(`exams`.`course_id`) AS `exam_attempts`
FROM `students`
JOIN `exam_student` ON `exam_student`.`student_id` = `students`.`id`
JOIN `exams` ON `exams`.`id` = `exam_student`.`exam_id`
JOIN `courses` ON `courses`.`id` = `exams`.`course_id`
GROUP BY `students`.`id`, `courses`.`id`
HAVING SUM(CASE WHEN `exam_student`.`vote` > 18 THEN 1 ELSE 0 END) > 0;
